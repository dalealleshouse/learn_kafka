// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.10.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Weather.Domain
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class WeatherData : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""WeatherData"",""namespace"":""Weather.Domain"",""fields"":[{""name"":""Location"",""type"":""string""},{""name"":""Date"",""type"":""string""},{""name"":""TempF"",""type"":""int""},{""name"":""Weather"",""type"":""string""},{""name"":""Humidity"",""type"":""int""},{""name"":""WindSpeedMPH"",""type"":""int""}]}");
		private string _Location;
		private string _Date;
		private int _TempF;
		private string _Weather;
		private int _Humidity;
		private int _WindSpeedMPH;
		public virtual Schema Schema
		{
			get
			{
				return WeatherData._SCHEMA;
			}
		}
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				this._Location = value;
			}
		}
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				this._Date = value;
			}
		}
		public int TempF
		{
			get
			{
				return this._TempF;
			}
			set
			{
				this._TempF = value;
			}
		}
		public string Weather
		{
			get
			{
				return this._Weather;
			}
			set
			{
				this._Weather = value;
			}
		}
		public int Humidity
		{
			get
			{
				return this._Humidity;
			}
			set
			{
				this._Humidity = value;
			}
		}
		public int WindSpeedMPH
		{
			get
			{
				return this._WindSpeedMPH;
			}
			set
			{
				this._WindSpeedMPH = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.Location;
			case 1: return this.Date;
			case 2: return this.TempF;
			case 3: return this.Weather;
			case 4: return this.Humidity;
			case 5: return this.WindSpeedMPH;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.Location = (System.String)fieldValue; break;
			case 1: this.Date = (System.String)fieldValue; break;
			case 2: this.TempF = (System.Int32)fieldValue; break;
			case 3: this.Weather = (System.String)fieldValue; break;
			case 4: this.Humidity = (System.Int32)fieldValue; break;
			case 5: this.WindSpeedMPH = (System.Int32)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
